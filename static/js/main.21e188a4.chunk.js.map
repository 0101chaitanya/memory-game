{"version":3,"sources":["components/fetchChar.js","App.js","reportWebVitals.js","index.js"],"names":["FetchCharacter","props","src","item","image","JSON","stringify","onClick","e","alt","id","name","App","rand","Math","floor","random","useState","array","setArray","stateObject","setStateObject","currentScore","highScore","scoreObject","setScoreObject","useEffect","unRandomArray","Array","keys","map","uniq","Set","splice","Array6","regenerateArray","obj","arr","slice","console","log","indexOf","Number","newArray","parse","target","dataset","characterArray","data","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e188a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FetchCharacter = (props) => {\n  return (\n    <div>\n      <img\n        src={props.item.image}\n        data-item={JSON.stringify(props.item)}\n        onClick={(e) => props.onClick(e)}\n        alt={props.item.id}\n      />\n      <p>\n        {props.item.name},{props.item.id}\n      </p>\n    </div>\n  );\n};\nexport default FetchCharacter;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport FetchCharacter from \"./components/fetchChar\";\nimport data from \"./components/data.json\";\nconst App = () => {\n  const rand = () => Math.floor(Math.random() * 24);\n  const [array, setArray] = useState([]);\n\n  const obj = {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n  };\n  const [stateObject, setStateObject] = useState(obj);\n  const [scoreObject, setScoreObject] = useState({\n    currentScore: 0,\n    highScore: 0,\n  });\n  let Array6 = () => {\n    let unRandomArray = [...Array(12).keys()].map(() => rand());\n    var uniq = [...new Set(unRandomArray)].splice(0, 6);\n    setArray(uniq);\n  };\n\n  useEffect(() => {\n    Array6();\n  }, []);\n  /*  const regenerateArray = () => {\n    let arr = array.slice(0);\n\n    let arrayInter = [...arr, rand(), rand(), rand(), rand(), rand()];\n\n    let newArray = [...new Set(arrayInter)].splice(0, 6);\n    return setArray(newArray);\n  };\n */\n  const regenerateArray = (obj) => {\n    let arr = array.slice(0);\n    console.log(arr.indexOf(Number(obj) - 1));\n    arr.splice(arr.indexOf(Number(obj) - 1), 1);\n    let newArray = [...new Set([...arr, rand(), rand(), rand()])].splice(0, 6);\n    //i++;\n    setArray(newArray);\n  };\n\n  useEffect(() => {\n    for (const obj in stateObject) {\n      if (stateObject[obj] >= 2) {\n        if (scoreObject.currentScore - 1 > scoreObject.highScore) {\n          setScoreObject((scoreObject, props) => ({\n            highScore: Number(scoreObject.currentScore) - 1,\n            currentScore: 0,\n          }));\n\n          setStateObject((stateObject) => ({\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0,\n            10: 0,\n            11: 0,\n            12: 0,\n            13: 0,\n            14: 0,\n            15: 0,\n            16: 0,\n            17: 0,\n            18: 0,\n            19: 0,\n            20: 0,\n            21: 0,\n            22: 0,\n            23: 0,\n            24: 0,\n          }));\n          regenerateArray(obj);\n        } else {\n          setScoreObject({\n            ...scoreObject,\n            currentScore: 0,\n          });\n          setStateObject((stateObject) => ({\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0,\n            10: 0,\n            11: 0,\n            12: 0,\n            13: 0,\n            14: 0,\n            15: 0,\n            16: 0,\n            17: 0,\n            18: 0,\n            19: 0,\n            20: 0,\n            21: 0,\n            22: 0,\n            23: 0,\n            24: 0,\n          }));\n          regenerateArray(obj);\n        }\n      }\n    }\n  }, [stateObject, scoreObject, regenerateArray]);\n\n  const onClick = (e) => {\n    const { id } = JSON.parse(e.target.dataset.item);\n    setStateObject((stateObject) => ({\n      ...stateObject,\n      [id]: [Number(stateObject[id]) + 1],\n    }));\n    setScoreObject((scoreObject) => ({\n      ...scoreObject,\n      currentScore: Number(scoreObject.currentScore) + 1,\n    }));\n  };\n  const characterArray = array.map((item) => {\n    return (\n      <FetchCharacter\n        key={`image${data[item].id}`}\n        onClick={onClick}\n        item={data[item]}\n      />\n    );\n  });\n  return (\n    <div className=\"App\">\n      <h1>\n        <u>Memory Game - R&M Theme</u>\n      </h1>\n      <div>\n        <p>currentScore : {scoreObject.currentScore}</p>\n        <p>highScore: {scoreObject.highScore}</p>\n      </div>\n      <div className=\"imgContainer\">{characterArray}</div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}